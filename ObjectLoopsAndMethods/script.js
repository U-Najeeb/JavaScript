// Object Methods and How to loop over them
/* 
1.Object.keys(objectName)
2.Object.values(objectName)
3.Object.entries(objectName)
all these methods return array of keys, values and entries respectively
*/

const openingHours= {
    thu: {
      open: 12,
      close: 22,
    },
    fri: {
      open: 11,
      close: 23,
    },
    sat: {
      open: 0, // Open 24 hours
      close: 24,
    },
  };
const restaurant = {
    name: 'Classico Italiano',
    location: 'Via Angelo Tavanti 23, Firenze, Italy',
    categories: ['Italian', 'Pizzeria', 'Vegetarian', 'Organic'],
    starterMenu: ['Focaccia', 'Bruschetta', 'Garlic Bread', 'Caprese Salad'],
    mainMenu: ['Pizza', 'Pasta', 'Risotto'],
    openingHours,
};

// Lets see what Object.keys(objectName) will return us

const properties = Object.keys(openingHours)
console.log(properties)// (3) ['thu', 'fri', 'sat'] all the keys 

// We only use for of loop to iterate throught array (iterable)
for(const day of properties){
    console.log(day)
}

Object.values(openingHours)
const vals =  Object.values(openingHours)
console.log(vals) 

/* as we can see that it returned an array of objects
[
    {
        "open": 12,
        "close": 22
    },
    {
        "open": 11,
        "close": 23
    },
    {
        "open": 0,
        "close": 24
    }
]*/

// we can use destructing as well 
const [{open,close}, arr2, arr3] = vals
console.log(open ,close , arr2, arr3) 
//12 22 {open: 11, close: 23}  {open: 0, close: 24}

// In this we loop through those values and as well as destructure them as well 
for (const {open, close} of vals){
    console.log(open , close)
}

// And now we will go through Object.entries(objectName)

const entries = Object.entries(openingHours)
console.log(entries) 
//(3) [Array(2), Array(2), Array(2)]

// Object.entries with loops and destructing
for(const [key,{open, close}] of entries){
    console.log(key,open, close)
}


// Addtional one other method we can studies here is Object.fromEntries(iterable)
// This is a static method iterables in to an object 
// how is it used lets see?

const array = [
    [1,2],
    [3,4],
    [4,5],
]

const obj =  Object.fromEntries(array)
console.log(obj)
//{1: 2, 3: 4, 4: 5} we can see it created an object from these and we can use maps etc

// Transforming Objects
//Objects lack many methods that exist for arrays, e.g. map, filter and others.
// But there is a fun way to use them with objects
let prices = {
    banana: 1,
    orange: 2,
    meat: 4,
};
const doubledPrices = Object.fromEntries(
    Object.entries(prices).map((array) => [array[0], array[1] * 2 ])
)
console.log(doubledPrices)
// {banana: 2, orange: 4, meat: 8}

/* What happened here? as you can se we wanted to create an object 
with same properties but with doubled prices we simply used fromEntries
for that we map the array that was generated by .entries(prices) and 
return a new array with same properties but doubled the prices and later fromEntries
coverted that array into and object */

